{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopupFunction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext); // const [name, setName] = useState(\"\")\n  // const [description, setDescription] = useState(\"\")\n\n  const [formValues, setFormValues] = useState({\n    name: '',\n    description: ''\n  });\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]); // React.useEffect(() => {\n  //   setName(currentUser.name);\n  //   setDescription(currentUser.about);\n  // }, [currentUser]);\n  // function handleChange(event) {\n  //   event.target.name === \"name\" ?\n  //   setName(event.target.value) :\n  //   setDescription(event.target.value)\n  // }\n\n  useEffect(function setCurrentUserData() {\n    setFormValues({\n      name: currentUser.name\n    });\n  });\n  const {\n    name,\n    description\n  } = formValues;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: handleChange,\n        name: \"name\",\n        id: \"username-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        minLength: \"2\",\n        maxLength: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error username-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        onChange: handleChange,\n        name: \"description\",\n        id: \"job-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        minLength: \"2\",\n        maxLength: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error job-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProfilePopup, \"kUmVR/WuJsA7xaIiXZinzuf//I8=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopupFunction.js"],"names":["React","useState","useCallback","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","formValues","setFormValues","name","description","handleChange","event","value","target","prevState","setCurrentUserData","handleSubmit","preventDefault","onUpdateUser","about","title","buttonText","onClose","isOpen"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n  \n  const currentUser = React.useContext(CurrentUserContext)\n  \n  // const [name, setName] = useState(\"\")\n  // const [description, setDescription] = useState(\"\")\n\n  const [formValues, setFormValues] = useState({\n    name: '',\n    description: ''\n  })\n  \n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }))\n  }, [setFormValues])\n\n  // React.useEffect(() => {\n  //   setName(currentUser.name);\n  //   setDescription(currentUser.about);\n  // }, [currentUser]);\n  \n  // function handleChange(event) {\n  //   event.target.name === \"name\" ?\n  //   setName(event.target.value) :\n  //   setDescription(event.target.value)\n  // }\n\nuseEffect(function setCurrentUserData() {\n  setFormValues({\n    name: currentUser.name\n  })\n})\n\n  const { name, description } = formValues;\n\n\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    props.onUpdateUser({\n      name,\n      about: description\n    })\n  }\n    \n    return (\n      <PopupWithForm\n      name={props.name}\n      title={props.title}\n      buttonText={props.buttonText}\n      onClose={props.onClose}\n      isOpen={props.isOpen}\n      onSubmit={handleSubmit}>\n      <label className=\"popup__form-field\">\n        <input\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          id=\"username-input\"\n          className=\"popup__input-field\"\n          required\n          type=\"text\"\n          placeholder=\"Имя пользователя\"\n          minLength=\"2\"\n          maxLength=\"40\" />\n        <span className=\"popup__input-error username-input-error\"></span>\n      </label>\n      <label className=\"popup__form-field\">\n        <input\n          value={description}\n          onChange={handleChange}\n          name=\"description\"\n          id=\"job-input\"\n          className=\"popup__input-field\"\n          required\n          type=\"text\"\n          placeholder=\"О себе\"\n          minLength=\"2\"\n          maxLength=\"200\" />\n        <span className=\"popup__input-error job-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}