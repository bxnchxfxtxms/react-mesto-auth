{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.insertNewCard = (newCard, card) => {\n      this.componentDidMount(state => state.map(c => c._id === card._id ? newCard : c));\n      this.setState({});\n    };\n\n    this.handleCardDelete = card => {\n      api.deleteCard(card._id).then(card => this.componentDidMount(state => state.filter(element => !(element._id === card._id)))).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(i => i._id === this.context._id);\n      isLiked ? api.removeLike(card._id).then(newCard => {\n        this.insertNewCard(newCard);\n      }).catch(err => {\n        console.log(err);\n      }) : api.setLike(card._id).then(newCard => {\n        this.insertNewCard(newCard);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSetUserData = serverData => {\n      this.setState({\n        currentUser: {\n          name: serverData.name,\n          about: serverData.about,\n          avatar: serverData.avatar,\n          _id: serverData._id\n        }\n      });\n    };\n\n    this.handleAddPlaceSubmit = newCardData => {\n      api.postNewCard(newCardData).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateUser = newUserData => {\n      api.editUserInfo(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = newUserData => {\n      api.changeAvatar(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleCardClick = _ => {\n      this.setState({\n        selectedCard: {\n          link: _.link,\n          name: _.name,\n          isOpen: true\n        }\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        selectedCard: {\n          isOpen: false\n        }\n      });\n    };\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {\n        isOpen: false\n      },\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.handleSetUserData(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(_ => {\n      this.setState({\n        cards: _\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: this.state.currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: this.handleEditProfileClick,\n          onAddPlace: this.handleAddPlaceClick,\n          onEditAvatar: this.handleEditAvatarClick,\n          onCardClick: this.handleCardClick,\n          onCardLike: this.handleCardLike,\n          onCardDelete: this.handleCardDelete,\n          cards: this.state.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          name: 'add-place',\n          title: 'Новое место',\n          buttonText: 'Создать',\n          onClose: this.closeAllPopups,\n          isOpen: this.state.isAddPlacePopupOpen,\n          onAddPlace: this.handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          name: 'edit-profile',\n          title: 'Редактировать профиль',\n          buttonText: 'Сохранить',\n          isOpen: this.state.isEditProfilePopupOpen,\n          onClose: this.closeAllPopups,\n          onUpdateUser: this.handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          name: 'change-avatar',\n          title: 'Обновить аватар',\n          buttonText: 'Сохранить',\n          onClose: this.closeAllPopups,\n          isOpen: this.state.isEditAvatarPopupOpen,\n          onUpdateAvatar: this.handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: 'card-delete-confirm',\n          title: 'Вы уверены?',\n          buttonText: 'Да'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: this.state.selectedCard,\n          onClose: this.closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","App","Component","constructor","props","insertNewCard","newCard","card","componentDidMount","state","map","c","_id","setState","handleCardDelete","deleteCard","then","filter","element","catch","err","console","log","handleCardLike","isLiked","likes","some","i","context","removeLike","setLike","handleSetUserData","serverData","currentUser","name","about","avatar","handleAddPlaceSubmit","newCardData","postNewCard","cards","closeAllPopups","handleUpdateUser","newUserData","editUserInfo","userData","handleUpdateAvatar","changeAvatar","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","_","selectedCard","link","isOpen","getUserInfo","getCards","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { api } from '../utils/Api.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {isOpen: false},\n      cards: []\n    }\n  }\n\n  insertNewCard = (newCard, card) => {\n    this.componentDidMount((state) => state.map((c) => c._id === card._id ? newCard : c))\n    this.setState({\n      \n    })\n  }\n\n  handleCardDelete = card => {\n    api.deleteCard(card._id)\n    .then((card) => this.componentDidMount((state) => state.filter((element) => !(element._id === card._id))))\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === this.context._id);\n\n    isLiked ?\n    api.removeLike(card._id)\n    .then((newCard) => {\n      this.insertNewCard(newCard)\n    })\n    .catch(err => { \n      console.log(err)\n    }) :\n    api.setLike(card._id)\n    .then((newCard) => {\n      this.insertNewCard(newCard)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleSetUserData = serverData => {\n    this.setState({\n      currentUser: {\n        name: serverData.name,\n        about: serverData.about,\n        avatar: serverData.avatar,\n        _id: serverData._id\n      }\n    })\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n    .then(userData => {\n      this.handleSetUserData(userData)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n    api.getCards()\n    .then(_ => {\n      this.setState({\n        cards: _\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleAddPlaceSubmit = newCardData => {\n    api.postNewCard(newCardData)\n    .then(newCard => {\n      this.setState({\n        cards: [newCard, ...this.state.cards]\n      })\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  \n  handleUpdateUser = newUserData => {\n    api.editUserInfo(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleUpdateAvatar = newUserData => {\n    api.changeAvatar(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    });\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true\n    });\n  }\n  \n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    });\n  }\n\n  handleCardClick = _ => {\n    this.setState({\n      selectedCard: {\n        link: _.link,\n        name: _.name,\n        isOpen: true\n      }\n    });\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {isOpen: false}\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"page\">\n        <CurrentUserContext.Provider value={this.state.currentUser}>\n          <Header />\n\n          <Main \n            onEditProfile={this.handleEditProfileClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onEditAvatar={this.handleEditAvatarClick}\n            onCardClick={this.handleCardClick}\n            onCardLike={this.handleCardLike}\n            onCardDelete={this.handleCardDelete}\n            cards={this.state.cards}\n          />\n\n          <Footer />\n              \n          <AddPlacePopup\n            name={'add-place'}\n            title={'Новое место'}\n            buttonText={'Создать'}\n            onClose={this.closeAllPopups}\n            isOpen={this.state.isAddPlacePopupOpen}\n            onAddPlace={this.handleAddPlaceSubmit}\n          />\n\n          <EditProfilePopup\n            name={'edit-profile'}\n            title={'Редактировать профиль'}\n            buttonText={'Сохранить'}\n            isOpen={this.state.isEditProfilePopupOpen}\n            onClose={this.closeAllPopups}\n            onUpdateUser={this.handleUpdateUser}\n          />\n\n          <EditAvatarPopup\n            name={'change-avatar'}\n            title={'Обновить аватар'}\n            buttonText={'Сохранить'}\n            onClose={this.closeAllPopups}\n            isOpen={this.state.isEditAvatarPopupOpen}\n            onUpdateAvatar={this.handleUpdateAvatar}\n          />\n              \n          <PopupWithForm\n            name={'card-delete-confirm'}\n            title={'Вы уверены?'}\n            buttonText={'Да'}\n          >\n          </PopupWithForm>\n\n          <ImagePopup\n            card={this.state.selectedCard}\n            onClose={this.closeAllPopups}\n          />\n\n        </CurrentUserContext.Provider>\n      </div>    \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}