{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCardDelete = card => {\n      api.deleteCard(card._id) // .then((card) => this.componentDidMount((state) => state.filter((element) => !(element._id === card._id))))\n      .then(card => {\n        this.setState({\n          cards: this.state.cards.filter(element => !(element._id === card._id))\n        });\n        console.log(this.state.cards);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      // const isLiked = card.likes.some(i => i._id === this.context._id);\n      const isLiked = card.likes.some(i => i._id === i._id);\n      isLiked ? api.removeLike(card._id).then(newCard => {\n        // this.insertNewCard(newCard)\n        // console.log(newCard)\n        console.log(this.stcurrentUser); // this.setState({\n        //   cards: this.state.cards.map((c) => (c._id === card._id) ? newCard : c)\n        // })\n        // console.log(this.state.cards)\n      }).catch(err => {\n        console.log(err);\n      }) : api.setLike(card._id).then(newCard => {\n        // this.insertNewCard(newCard)\n        this.setState({\n          cards: this.state.cards.map(c => c._id === card._id ? newCard : c)\n        });\n        console.log(this.state.cards);\n        console.log(this.context._id);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSetUserData = serverData => {\n      this.setState({\n        currentUser: {\n          name: serverData.name,\n          about: serverData.about,\n          avatar: serverData.avatar,\n          _id: serverData._id\n        }\n      });\n    };\n\n    this.handleAddPlaceSubmit = newCardData => {\n      api.postNewCard(newCardData).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateUser = newUserData => {\n      api.editUserInfo(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = newUserData => {\n      api.changeAvatar(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleCardClick = _ => {\n      this.setState({\n        selectedCard: {\n          link: _.link,\n          name: _.name,\n          isOpen: true\n        }\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        selectedCard: {\n          isOpen: false\n        }\n      });\n    };\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {\n        isOpen: false\n      },\n      cards: []\n    };\n  } // insertNewCard = (newCard, card) => {\n  //   this.componentDidMount((state) => state.map((c) => c._id === card._id ? newCard : c))\n  // }\n\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.handleSetUserData(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(_ => {\n      this.setState({\n        cards: _\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: this.state.currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: this.handleEditProfileClick,\n          onAddPlace: this.handleAddPlaceClick,\n          onEditAvatar: this.handleEditAvatarClick,\n          onCardClick: this.handleCardClick,\n          onCardLike: this.handleCardLike,\n          onCardDelete: this.handleCardDelete,\n          cards: this.state.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          name: 'add-place',\n          title: 'Новое место',\n          buttonText: 'Создать',\n          onClose: this.closeAllPopups,\n          isOpen: this.state.isAddPlacePopupOpen,\n          onAddPlace: this.handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          name: 'edit-profile',\n          title: 'Редактировать профиль',\n          buttonText: 'Сохранить',\n          isOpen: this.state.isEditProfilePopupOpen,\n          onClose: this.closeAllPopups,\n          onUpdateUser: this.handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          name: 'change-avatar',\n          title: 'Обновить аватар',\n          buttonText: 'Сохранить',\n          onClose: this.closeAllPopups,\n          isOpen: this.state.isEditAvatarPopupOpen,\n          onUpdateAvatar: this.handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: 'card-delete-confirm',\n          title: 'Вы уверены?',\n          buttonText: 'Да'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: this.state.selectedCard,\n          onClose: this.closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.contextType = CurrentUserContext;\nexport default App;","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","App","Component","constructor","props","handleCardDelete","card","deleteCard","_id","then","setState","cards","state","filter","element","console","log","catch","err","handleCardLike","isLiked","likes","some","i","removeLike","newCard","stcurrentUser","setLike","map","c","context","handleSetUserData","serverData","currentUser","name","about","avatar","handleAddPlaceSubmit","newCardData","postNewCard","closeAllPopups","handleUpdateUser","newUserData","editUserInfo","userData","handleUpdateAvatar","changeAvatar","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","_","selectedCard","link","isOpen","componentDidMount","getUserInfo","getCards","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { api } from '../utils/Api.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n\nclass App extends React.Component {\n\n  static contextType = CurrentUserContext\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {isOpen: false},\n      cards: []\n    }\n  }\n\n  // insertNewCard = (newCard, card) => {\n  //   this.componentDidMount((state) => state.map((c) => c._id === card._id ? newCard : c))\n  // }\n\n  handleCardDelete = card => {\n    api.deleteCard(card._id)\n    // .then((card) => this.componentDidMount((state) => state.filter((element) => !(element._id === card._id))))\n    .then((card) => {\n      this.setState({\n        cards: this.state.cards.filter((element) => !(element._id === card._id))\n      })\n      console.log(this.state.cards)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleCardLike = card => {\n    // const isLiked = card.likes.some(i => i._id === this.context._id);\n    const isLiked = card.likes.some(i => i._id === i._id);\n\n    isLiked ?\n    api.removeLike(card._id)\n    .then((newCard) => {\n      // this.insertNewCard(newCard)\n\n      // console.log(newCard)\n      console.log(this.stcurrentUser)\n      \n      // this.setState({\n      //   cards: this.state.cards.map((c) => (c._id === card._id) ? newCard : c)\n      // })\n      // console.log(this.state.cards)\n    })\n    .catch(err => { \n      console.log(err)\n    }) :\n    api.setLike(card._id)\n    .then((newCard) => {\n      // this.insertNewCard(newCard)\n      this.setState({\n        cards: this.state.cards.map((c) => c._id === card._id ? newCard : c)\n      })\n      console.log(this.state.cards)\n      console.log(this.context._id)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleSetUserData = serverData => {\n    this.setState({\n      currentUser: {\n        name: serverData.name,\n        about: serverData.about,\n        avatar: serverData.avatar,\n        _id: serverData._id\n      }\n    })\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n    .then(userData => {\n      this.handleSetUserData(userData)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n    api.getCards()\n    .then(_ => {\n      this.setState({\n        cards: _\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleAddPlaceSubmit = newCardData => {\n    api.postNewCard(newCardData)\n    .then(newCard => {\n      this.setState({\n        cards: [newCard, ...this.state.cards]\n      })\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  \n  handleUpdateUser = newUserData => {\n    api.editUserInfo(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleUpdateAvatar = newUserData => {\n    api.changeAvatar(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    });\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true\n    });\n  }\n  \n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    });\n  }\n\n  handleCardClick = _ => {\n    this.setState({\n      selectedCard: {\n        link: _.link,\n        name: _.name,\n        isOpen: true\n      }\n    });\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: {isOpen: false}\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"page\">\n        <CurrentUserContext.Provider value={this.state.currentUser}>\n          <Header />\n\n          <Main \n            onEditProfile={this.handleEditProfileClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onEditAvatar={this.handleEditAvatarClick}\n            onCardClick={this.handleCardClick}\n            onCardLike={this.handleCardLike}\n            onCardDelete={this.handleCardDelete}\n            cards={this.state.cards}\n          />\n\n          <Footer />\n              \n          <AddPlacePopup\n            name={'add-place'}\n            title={'Новое место'}\n            buttonText={'Создать'}\n            onClose={this.closeAllPopups}\n            isOpen={this.state.isAddPlacePopupOpen}\n            onAddPlace={this.handleAddPlaceSubmit}\n          />\n\n          <EditProfilePopup\n            name={'edit-profile'}\n            title={'Редактировать профиль'}\n            buttonText={'Сохранить'}\n            isOpen={this.state.isEditProfilePopupOpen}\n            onClose={this.closeAllPopups}\n            onUpdateUser={this.handleUpdateUser}\n          />\n\n          <EditAvatarPopup\n            name={'change-avatar'}\n            title={'Обновить аватар'}\n            buttonText={'Сохранить'}\n            onClose={this.closeAllPopups}\n            isOpen={this.state.isEditAvatarPopupOpen}\n            onUpdateAvatar={this.handleUpdateAvatar}\n          />\n              \n          <PopupWithForm\n            name={'card-delete-confirm'}\n            title={'Вы уверены?'}\n            buttonText={'Да'}\n          >\n          </PopupWithForm>\n\n          <ImagePopup\n            card={this.state.selectedCard}\n            onClose={this.closeAllPopups}\n          />\n\n        </CurrentUserContext.Provider>\n      </div>    \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}