{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/react-mesto-auth/src/components/App.js\";\nimport React from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport { auth } from '../utils/Auth';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCardDelete = card => {\n      api.deleteCard(card._id).then(() => {\n        this.setState({\n          cards: this.state.cards.filter(element => !(element._id === card._id))\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(i => i._id === this.state.currentUser._id);\n      isLiked ? api.removeLike(card._id).then(newCard => {\n        this.setState({\n          cards: this.state.cards.map(c => c._id === card._id ? newCard : c)\n        });\n      }).catch(err => {\n        console.log(err);\n      }) : api.setLike(card._id).then(newCard => {\n        this.setState({\n          cards: this.state.cards.map(c => c._id === card._id ? newCard : c)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSetUserData = serverData => {\n      this.setState({\n        currentUser: {\n          name: serverData.name,\n          about: serverData.about,\n          avatar: serverData.avatar,\n          _id: serverData._id\n        }\n      });\n    };\n\n    this.handleAddPlaceSubmit = newCardData => {\n      api.postNewCard(newCardData).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateUser = newUserData => {\n      api.editUserInfo(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = newUserData => {\n      api.changeAvatar(newUserData).then(userData => {\n        this.handleSetUserData(userData);\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleCardClick = _ => {\n      this.setState({\n        selectedCard: {\n          link: _.link,\n          name: _.name,\n          isOpen: true\n        }\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {\n          isOpen: false\n        }\n      });\n    };\n\n    this.handleRegister = data => {\n      auth.register(data.email, data.password).then(res => {\n        if (res) {\n          localStorage.setItem('token', res.data._id);\n          this.setState({\n            authorizationSuccess: true,\n            isInfoTooltipOpen: true\n          });\n          this.props.history.push('/sign-in');\n        } else {\n          this.setState({\n            authorizationSuccess: false,\n            isInfoTooltipOpen: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.checkToken = localJwt => {\n      // console.log(data)\n      auth.checkToken(localToken).then(res => {\n        // if (data._id === this.state.currentUser._id && data.email === this.state.email)\n        // console.log(res.data._id)\n        console.log(res.data);\n        console.log(localStorage.getItem('token')); // console.log('server email ' + res.data.email)\n        // console.log('server id ' + res.data._id)\n        // console.log('current email ' + this.state.authorizationData.email)\n        // console.log('current id ' + this.state.authorizationData._id)\n        // console.log(res.data._id === this.state.authorizationData._id && res.data.email === this.state.authorizationData.email)\n        // if (data._id === currentUser._id)\n      });\n    };\n\n    this.handleLogin = data => {\n      // this.checkToken\n      this.setState({\n        authorizationData: {\n          email: data.email,\n          _id: data._id\n        }\n      });\n      auth.authorize(data.email, data.password).then(res => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          this.setState({\n            loggedIn: true\n          });\n          this.props.history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        loggedIn: false,\n        email: ''\n      });\n      localStorage.removeItem('jwt');\n    };\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isInfoTooltipOpen: false,\n      selectedCard: {\n        isOpen: false\n      },\n      cards: [],\n      loggedIn: false,\n      authorizationData: {\n        email: '',\n        _id: ''\n      },\n      authorizationSuccess: false\n    };\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.handleSetUserData(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(_ => {\n      this.setState({\n        cards: _\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    this.checkToken(localStorage.getItem('jwt'));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: this.state.currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: this.state.email,\n          onLoginClick: this.handleLogin,\n          onLogoutClick: this.handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: this.state.loggedIn,\n            path: \"/\",\n            exact: true,\n            children: [/*#__PURE__*/_jsxDEV(Main, {\n              onEditProfile: this.handleEditProfileClick,\n              onAddPlace: this.handleAddPlaceClick,\n              onEditAvatar: this.handleEditAvatarClick,\n              onCardClick: this.handleCardClick,\n              onCardLike: this.handleCardLike,\n              onCardDelete: this.handleCardDelete,\n              cards: this.state.cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n              name: 'add-place',\n              title: 'Новое место',\n              buttonText: 'Создать',\n              onClose: this.closeAllPopups,\n              isOpen: this.state.isAddPlacePopupOpen,\n              onAddPlace: this.handleAddPlaceSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n              name: 'edit-profile',\n              title: 'Редактировать профиль',\n              buttonText: 'Сохранить',\n              isOpen: this.state.isEditProfilePopupOpen,\n              onClose: this.closeAllPopups,\n              onUpdateUser: this.handleUpdateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n              name: 'change-avatar',\n              title: 'Обновить аватар',\n              buttonText: 'Сохранить',\n              onClose: this.closeAllPopups,\n              isOpen: this.state.isEditAvatarPopupOpen,\n              onUpdateAvatar: this.handleUpdateAvatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n              name: 'card-delete-confirm',\n              title: 'Вы уверены?',\n              buttonText: 'Да'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n              card: this.state.selectedCard,\n              onClose: this.closeAllPopups\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: this.handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: this.handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: this.state.isInfoTooltipOpen,\n          onClose: this.closeAllPopups,\n          authorizationSuccess: this.state.authorizationSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.contextType = CurrentUserContext;\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","withRouter","Login","Register","InfoTooltip","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","auth","api","CurrentUserContext","App","Component","constructor","props","handleCardDelete","card","deleteCard","_id","then","setState","cards","state","filter","element","catch","err","console","log","handleCardLike","isLiked","likes","some","i","currentUser","removeLike","newCard","map","c","setLike","handleSetUserData","serverData","name","about","avatar","handleAddPlaceSubmit","newCardData","postNewCard","closeAllPopups","handleUpdateUser","newUserData","editUserInfo","userData","handleUpdateAvatar","changeAvatar","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","_","selectedCard","link","isOpen","isInfoTooltipOpen","handleRegister","data","register","email","password","res","localStorage","setItem","authorizationSuccess","history","push","checkToken","localJwt","localToken","getItem","handleLogin","authorizationData","authorize","token","loggedIn","handleLogout","removeItem","componentDidMount","getUserInfo","getCards","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport Login from './Login'\nimport Register from './Register'\nimport InfoTooltip from './InfoTooltip'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ProtectedRoute from './ProtectedRoute'\nimport { auth } from '../utils/Auth'\nimport { api } from '../utils/Api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nclass App extends React.Component {\n\n  static contextType = CurrentUserContext\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentUser: {},\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isInfoTooltipOpen: false,\n      selectedCard: {isOpen: false},\n      cards: [],\n      loggedIn: false,\n      authorizationData: {\n        email: '',\n        _id: ''\n      },\n      authorizationSuccess: false\n    }\n  }\n\n  handleCardDelete = card => {\n    api.deleteCard(card._id)\n    .then(() => {\n      this.setState({\n        cards: this.state.cards.filter((element) => !(element._id === card._id))\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === this.state.currentUser._id);\n\n    isLiked ?\n    api.removeLike(card._id)\n    .then((newCard) => {\n      this.setState({\n        cards: this.state.cards.map((c) => (c._id === card._id) ? newCard : c)\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    }) :\n    api.setLike(card._id)\n    .then((newCard) => {\n      this.setState({\n        cards: this.state.cards.map((c) => c._id === card._id ? newCard : c)\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleSetUserData = serverData => {\n    this.setState({\n      currentUser: {\n        name: serverData.name,\n        about: serverData.about,\n        avatar: serverData.avatar,\n        _id: serverData._id,\n      }\n    })\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n    .then(userData => {\n      this.handleSetUserData(userData)\n    })\n    .catch(err => { \n      console.log(err)\n    })\n    api.getCards()\n    .then(_ => {\n      this.setState({\n        cards: _\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n    this.checkToken(localStorage.getItem('jwt'))\n  }\n\n  handleAddPlaceSubmit = newCardData => {\n    api.postNewCard(newCardData)\n    .then(newCard => {\n      this.setState({\n        cards: [newCard, ...this.state.cards]\n      })\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  \n  handleUpdateUser = newUserData => {\n    api.editUserInfo(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  handleUpdateAvatar = newUserData => {\n    api.changeAvatar(newUserData)\n    .then(userData => {\n      this.handleSetUserData(userData)\n      this.closeAllPopups()\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    });\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true\n    });\n  }\n  \n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    });\n  }\n\n  handleCardClick = _ => {\n    this.setState({\n      selectedCard: {\n        link: _.link,\n        name: _.name,\n        isOpen: true\n      }\n    });\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isInfoTooltipOpen: false,\n      selectedCard: {isOpen: false}\n    })\n  }\n\n  handleRegister = data => {\n    auth.register(data.email, data.password)\n    .then((res) => {\n      if (res) {\n        localStorage.setItem('token', res.data._id)\n        this.setState({\n          authorizationSuccess: true,\n          isInfoTooltipOpen: true\n        })\n        this.props.history.push('/sign-in')\n      } else {\n        this.setState({\n          authorizationSuccess: false,\n          isInfoTooltipOpen: true\n        })\n      }\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  checkToken = (localJwt) => {\n  \n    // console.log(data)\n    auth.checkToken(localToken)\n    .then((res) => {\n      // if (data._id === this.state.currentUser._id && data.email === this.state.email)\n      // console.log(res.data._id)\n      console.log(res.data)\n      console.log(localStorage.getItem('token'))\n      // console.log('server email ' + res.data.email)\n      // console.log('server id ' + res.data._id)\n      // console.log('current email ' + this.state.authorizationData.email)\n      // console.log('current id ' + this.state.authorizationData._id)\n      // console.log(res.data._id === this.state.authorizationData._id && res.data.email === this.state.authorizationData.email)\n      // if (data._id === currentUser._id)\n    })\n  }\n\n  handleLogin = data => {\n    // this.checkToken\n    this.setState({\n      authorizationData: {\n        email: data.email,\n        _id: data._id\n      }\n    })\n    auth.authorize(data.email, data.password)\n    .then((res) => {\n      if (res.token) {\n        localStorage.setItem('jwt', res.token)\n        this.setState({\n          loggedIn: true,\n        })\n        this.props.history.push('/')\n      }\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n  \n  handleLogout = () => {\n    this.setState({\n      loggedIn: false,\n      email: ''\n    })\n    localStorage.removeItem('jwt')\n  }\n  \n  render() {\n    return (\n      <div className=\"page\">\n        <CurrentUserContext.Provider value={this.state.currentUser}>\n\n          <Header\n            email={this.state.email}\n            onLoginClick={this.handleLogin}\n            onLogoutClick={this.handleLogout}\n          />\n          <Switch>\n            <ProtectedRoute\n              loggedIn={this.state.loggedIn}\n              path=\"/\" exact>\n              <Main \n                onEditProfile={this.handleEditProfileClick}\n                onAddPlace={this.handleAddPlaceClick}\n                onEditAvatar={this.handleEditAvatarClick}\n                onCardClick={this.handleCardClick}\n                onCardLike={this.handleCardLike}\n                onCardDelete={this.handleCardDelete}\n                cards={this.state.cards}\n              />\n\n              <Footer />\n\n              <AddPlacePopup\n                name={'add-place'}\n                title={'Новое место'}\n                buttonText={'Создать'}\n                onClose={this.closeAllPopups}\n                isOpen={this.state.isAddPlacePopupOpen}\n                onAddPlace={this.handleAddPlaceSubmit}\n              />\n\n              <EditProfilePopup\n                name={'edit-profile'}\n                title={'Редактировать профиль'}\n                buttonText={'Сохранить'}\n                isOpen={this.state.isEditProfilePopupOpen}\n                onClose={this.closeAllPopups}\n                onUpdateUser={this.handleUpdateUser}\n              />\n\n              <EditAvatarPopup\n                name={'change-avatar'}\n                title={'Обновить аватар'}\n                buttonText={'Сохранить'}\n                onClose={this.closeAllPopups}\n                isOpen={this.state.isEditAvatarPopupOpen}\n                onUpdateAvatar={this.handleUpdateAvatar}\n              />\n\n              <PopupWithForm\n                name={'card-delete-confirm'}\n                title={'Вы уверены?'}\n                buttonText={'Да'}\n              >\n              </PopupWithForm>\n\n              <ImagePopup\n                card={this.state.selectedCard}\n                onClose={this.closeAllPopups}\n              />\n\n            </ProtectedRoute>\n            <Route path=\"/sign-up\">\n              <Register\n                onRegister={this.handleRegister}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login\n                onLogin={this.handleLogin}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              {this.state.loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n          </Switch>\n              <InfoTooltip\n                isOpen={this.state.isInfoTooltipOpen}\n                onClose={this.closeAllPopups}\n                authorizationSuccess={this.state.authorizationSuccess}\n              />\n        </CurrentUserContext.Provider>\n      </div>    \n    );\n  }\n}\n\nexport default withRouter(App)"]},"metadata":{},"sourceType":"module"}