{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = useContext(CurrentUserContext);\n  const [formValues, setFormValues] = useState({\n    name: '',\n    description: ''\n  });\n  useEffect(() => {\n    if (!props.isOpen) {\n      setFormValues({\n        name: currentUser.name,\n        description: currentUser.about\n      });\n    } else {\n      setFormValues({\n        name: currentUser.name,\n        description: currentUser.about\n      });\n    }\n  }, [currentUser], [props.isOpen]);\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n  const {\n    name,\n    description\n  } = formValues;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name || '',\n        onChange: handleChange,\n        name: \"name\",\n        id: \"username-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        minLength: \"2\",\n        maxLength: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error username-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: description || '',\n        onChange: handleChange,\n        name: \"description\",\n        id: \"job-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        minLength: \"2\",\n        maxLength: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error job-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProfilePopup, \"Aty3puuCXREVNrhNK8U8LGMr2Ek=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useCallback","useEffect","useContext","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","formValues","setFormValues","name","description","isOpen","about","handleChange","event","value","target","prevState","handleSubmit","preventDefault","onUpdateUser","title","buttonText","onClose"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n  \n  const currentUser = useContext(CurrentUserContext)\n  \n  const [formValues, setFormValues] = useState({\n    name: '',\n    description: ''\n  })\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      setFormValues({\n        name: currentUser.name,\n        description: currentUser.about\n      })\n    } else {\n      setFormValues({\n        name: currentUser.name,\n        description: currentUser.about\n      })\n    }\n  }, [currentUser], [props.isOpen])\n  \n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }))\n  }, [setFormValues])\n  \n  const { name, description } = formValues;\n  \n  function handleSubmit(event) {\n    event.preventDefault()\n    \n    props.onUpdateUser({\n      name,\n      about: description\n    })\n    \n  }\n    \n    return (\n      <PopupWithForm\n        name={props.name}\n        title={props.title}\n        buttonText={props.buttonText}\n        onClose={props.onClose}\n        isOpen={props.isOpen}\n        onSubmit={handleSubmit}>\n        <label className=\"popup__form-field\">\n          <input\n            value={name || ''}\n            onChange={handleChange}\n            name=\"name\"\n            id=\"username-input\"\n            className=\"popup__input-field\"\n            required\n            type=\"text\"\n            placeholder=\"Имя пользователя\"\n            minLength=\"2\"\n            maxLength=\"40\" />\n          <span className=\"popup__input-error username-input-error\"></span>\n        </label>\n        <label className=\"popup__form-field\">\n          <input\n            value={description || ''}\n            onChange={handleChange}\n            name=\"description\"\n            id=\"job-input\"\n            className=\"popup__input-field\"\n            required\n            type=\"text\"\n            placeholder=\"О себе\"\n            minLength=\"2\"\n            maxLength=\"200\" />\n          <span className=\"popup__input-error job-input-error\"></span>\n        </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}