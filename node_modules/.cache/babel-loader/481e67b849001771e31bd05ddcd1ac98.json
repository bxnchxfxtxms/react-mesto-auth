{"ast":null,"code":"class Auth {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n\n    this.register = (email, password) => {\n      return fetch(`${this._baseUrl}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(this._checkResponse).then(res => {\n        return res;\n      }).catch(err => console.log(err));\n    };\n\n    this.authorize = (email, password) => {\n      return fetch(`${this._baseUrl}/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(this._checkResponse).then(res => {\n        return res;\n      }).catch(err => console.log(err));\n    };\n\n    this.getContent = token => {\n      return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(data => data);\n    };\n\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n});","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/react-mesto-auth/src/utils/Auth.js"],"names":["Auth","constructor","baseUrl","register","email","password","fetch","_baseUrl","method","headers","body","JSON","stringify","then","_checkResponse","res","catch","err","console","log","authorize","getContent","token","BASE_URL","json","data","ok","Promise","reject","status","auth"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,OAAc;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;;AAAA,SAQzBC,QARyB,GAQd,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9B,aAAOC,KAAK,CAAE,GAAE,KAAKC,QAAS,SAAlB,EAA4B;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,QAAF;AAAYD,UAAAA;AAAZ,SAAf;AALgC,OAA5B,CAAL,CAONS,IAPM,CAOD,KAAKC,cAPJ,EAQND,IARM,CAQAE,GAAD,IAAS;AACb,eAAOA,GAAP;AACD,OAVM,EAWNC,KAXM,CAWCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,KArBwB;;AAAA,SAuBzBG,SAvByB,GAuBb,CAAChB,KAAD,EAAQC,QAAR,KAAqB;AAC/B,aAAOC,KAAK,CAAE,GAAE,KAAKC,QAAS,SAAlB,EAA4B;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,QAAF;AAAYD,UAAAA;AAAZ,SAAf;AALgC,OAA5B,CAAL,CAONS,IAPM,CAOD,KAAKC,cAPJ,EAQND,IARM,CAQAE,GAAD,IAAS;AACb,eAAOA,GAAP;AACD,OAVM,EAWNC,KAXM,CAWCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,KApCwB;;AAAA,SAqDzBI,UArDyB,GAqDXC,KAAD,IAAW;AACtB,aAAOhB,KAAK,CAAE,GAAEiB,QAAS,WAAb,EAAyB;AACnCf,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,2BAAkB,UAASa,KAAM;AAH1B;AAF0B,OAAzB,CAAL,CAQNT,IARM,CAQDE,GAAG,IAAIA,GAAG,CAACS,IAAJ,EARN,EASNX,IATM,CASDY,IAAI,IAAIA,IATP,CAAP;AAUD,KAhEwB;;AACvB,SAAKlB,QAAL,GAAgBL,OAAhB;AACD;;AAEDY,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,WAAOA,GAAG,CAACW,EAAJ,GAASX,GAAG,CAACS,IAAJ,EAAT,GAAsBG,OAAO,CAACC,MAAR,CAAgB,WAAUb,GAAG,CAACc,MAAO,EAArC,CAA7B;AACD;;AAPQ;;AAoEX,OAAO,MAAMC,IAAI,GAAG,IAAI9B,IAAJ,CAAS;AAC3BE,EAAAA,OAAO,EAAE;AADkB,CAAT,CAAb","sourcesContent":["class Auth {\n  constructor({ baseUrl }) {\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  register = (email, password) => {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ password, email })\n    })\n    .then(this._checkResponse)\n    .then((res) => {\n      return res\n    })\n    .catch((err) => console.log(err))\n  }\n\n  authorize = (email, password) => {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ password, email })\n    })\n    .then(this._checkResponse)\n    .then((res) => {\n      return res\n    })\n    .catch((err) => console.log(err))\n  }\n\n  // getContent = localJwt => {\n  //   return fetch(`${this._baseUrl}/users/me`, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${localJwt}`\n  //     }\n  //   })\n  //   .then(this._checkResponse)\n  //   .then((res) => {\n  //     return res\n  //   })\n  //   .catch((err) => console.log(err))\n  // }\n\n  getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  } \n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n})"]},"metadata":{},"sourceType":"module"}