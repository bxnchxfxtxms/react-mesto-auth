{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    name: '',\n    link: ''\n  });\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n  const {\n    name,\n    link\n  } = formValues;\n  useEffect(() => {\n    if (props.isOpen) {\n      setFormValues();\n    }\n  }, [props.isOpen]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name || '',\n        onChange: handleChange,\n        id: \"place-title-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        minLength: \"2\",\n        maxLength: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error place-title-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: link || '',\n        onChange: handleChange,\n        id: \"place-link-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"url\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error place-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"kceEgJ3diwtE7fivwD5pHTtLDHs=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/AddPlacePopup.js"],"names":["React","useState","useCallback","useEffect","PopupWithForm","AddPlacePopup","props","formValues","setFormValues","name","link","handleChange","event","value","target","prevState","isOpen","handleSubmit","preventDefault","onAddPlace","title","buttonText","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;AAC3CQ,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,IAAI,EAAE;AAFqC,GAAD,CAA5C;AAMA,QAAMC,YAAY,GAAGT,WAAW,CAAEU,KAAD,IAAW;AAC1C,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAN,IAAAA,aAAa,CAACO,SAAS,KAAK,EAAE,GAAGA,SAAL;AAAgB,OAACN,IAAD,GAAQI;AAAxB,KAAL,CAAV,CAAb;AACD,GAH+B,EAG7B,CAACL,aAAD,CAH6B,CAAhC;AAKA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBH,UAAvB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACU,MAAV,EAAkB;AAChBR,MAAAA,aAAa;AACd;AACF,GAJQ,EAIN,CAACF,KAAK,CAACU,MAAP,CAJM,CAAT;;AAMA,WAASC,YAAT,CAAsBL,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACM,cAAN;AAEAZ,IAAAA,KAAK,CAACa,UAAN,CAAiB;AAAEV,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAjB;AACD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAEJ,KAAK,CAACG,IADd;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACc,KAFf;AAGE,IAAA,UAAU,EAAEd,KAAK,CAACe,UAHpB;AAIE,IAAA,OAAO,EAAEf,KAAK,CAACgB,OAJjB;AAKE,IAAA,MAAM,EAAEhB,KAAK,CAACU,MALhB;AAME,IAAA,QAAQ,EAAEC,YANZ;AAAA,4BAOI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AACE,QAAA,KAAK,EAAER,IAAI,IAAI,EADjB;AAEE,QAAA,QAAQ,EAAEE,YAFZ;AAGE,QAAA,EAAE,EAAC,mBAHL;AAIE,QAAA,SAAS,EAAC,oBAJZ;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,kDARd;AASE,QAAA,SAAS,EAAC,GATZ;AAUE,QAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAqBI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AACE,QAAA,KAAK,EAAED,IAAI,IAAI,EADjB;AAEE,QAAA,QAAQ,EAAEC,YAFZ;AAGE,QAAA,EAAE,EAAC,kBAHL;AAIE,QAAA,SAAS,EAAC,oBAJZ;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,IAAI,EAAC,KANP;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA/DQN,a;;KAAAA,a;AAiET,eAAeA,aAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n\n  const [formValues, setFormValues] = useState({\n    name: '',\n    link: ''\n  })\n\n  \n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }))\n  }, [setFormValues])\n  \n  const { name, link } = formValues;\n  \n  useEffect(() => {\n    if (props.isOpen) {\n      setFormValues()\n    }\n  }, [props.isOpen])\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    props.onAddPlace({ name, link })\n  }\n\n  return (\n    <PopupWithForm\n      name={props.name}\n      title={props.title}\n      buttonText={props.buttonText}\n      onClose={props.onClose}\n      isOpen={props.isOpen}\n      onSubmit={handleSubmit}>\n        <label className=\"popup__form-field\">\n          <input\n            value={name || ''}\n            onChange={handleChange}\n            id=\"place-title-input\"\n            className=\"popup__input-field\"\n            required\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Название\"\n            minLength=\"2\"\n            maxLength=\"30\" />\n          <span className=\"popup__input-error place-title-input-error\"></span>\n        </label>\n        <label className=\"popup__form-field\">\n          <input\n            value={link || ''}\n            onChange={handleChange}\n            id=\"place-link-input\"\n            className=\"popup__input-field\"\n            required\n            type=\"url\"\n            name=\"link\"\n            placeholder=\"Ссылка на картинку\" />\n          <span className=\"popup__input-error place-link-input-error\"></span>\n        </label>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}