{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const inputRef = useRef();\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  });\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n  const {\n    avatar\n  } = formValues;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field popup__form-field_place_change-avatar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        id: \"avatar-link-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"url\",\n        name: \"avatarLink\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error avatar-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"KPoD8LAv7EGmAChPb2nAAUiXem4=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useState","useCallback","useEffect","useContext","useRef","PopupWithForm","CurrentUserContext","EditAvatarPopup","props","inputRef","formValues","setFormValues","avatar","handleChange","event","name","value","target","prevState","title","buttonText","onClose","isOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,UAAlD,EAA8DC,MAA9D,QAA4E,OAA5E;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE9B,QAAMC,QAAQ,GAAGL,MAAM,EAAvB;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC;AAC3CY,IAAAA,MAAM,EAAE;AADmC,GAAD,CAA5C;AAIA,QAAMC,YAAY,GAAGZ,WAAW,CAAEa,KAAD,IAAW;AAC1C,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAN,IAAAA,aAAa,CAACO,SAAS,KAAK,EAAE,GAAGA,SAAL;AAAgB,OAACH,IAAD,GAAQC;AAAxB,KAAL,CAAV,CAAb;AACD,GAH+B,EAG7B,CAACL,aAAD,CAH6B,CAAhC;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAaF,UAAnB;AAEA,sBACE,QAAC,aAAD;AACA,IAAA,IAAI,EAAEF,KAAK,CAACO,IADZ;AAEA,IAAA,KAAK,EAAEP,KAAK,CAACW,KAFb;AAGA,IAAA,UAAU,EAAEX,KAAK,CAACY,UAHlB;AAIA,IAAA,OAAO,EAAEZ,KAAK,CAACa,OAJf;AAKA,IAAA,MAAM,EAAEb,KAAK,CAACc,MALd;AAAA,2BAME;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA,8BACA;AAAO,QAAA,GAAG,EAAEb,QAAZ;AAAsB,QAAA,EAAE,EAAC,mBAAzB;AAA6C,QAAA,SAAS,EAAC,oBAAvD;AAA4E,QAAA,QAAQ,MAApF;AAAqF,QAAA,IAAI,EAAC,KAA1F;AAAgG,QAAA,IAAI,EAAC,YAArG;AAAkH,QAAA,WAAW,EAAC;AAA9H;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA5BQF,e;;KAAAA,e;AA8BT,eAAeA,eAAf","sourcesContent":["import React, { useState, useCallback, useEffect, useContext, useRef } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef()\n\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  })\n  \n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }))\n  }, [setFormValues])\n\n  const { avatar } = formValues;\n\n  return (\n    <PopupWithForm\n    name={props.name}\n    title={props.title}\n    buttonText={props.buttonText}\n    onClose={props.onClose}\n    isOpen={props.isOpen}>\n      <label className=\"popup__form-field popup__form-field_place_change-avatar\">\n      <input ref={inputRef} id=\"avatar-link-input\" className=\"popup__input-field\" required type=\"url\" name=\"avatarLink\" placeholder=\"Ссылка на аватар\" />\n      <span className=\"popup__input-error avatar-link-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}