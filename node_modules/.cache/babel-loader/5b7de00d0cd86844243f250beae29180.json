{"ast":null,"code":"class Auth {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n\n    this.register = (email, password) => {\n      return fetch(`${this._baseUrl}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(this._checkResponse).then(res => {\n        return res;\n      }).catch(err => console.log(err));\n    };\n\n    this.authorize = (email, password) => {\n      return fetch(`${this._baseUrl}/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(this._checkResponse).then(res => {\n        return res;\n      }).catch(err => console.log(err));\n    };\n\n    this.checkToken = localToken => {\n      return fetch(`${this._baseUrl}/user/me`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localToken}`\n        }\n      }).then(this._);\n    };\n\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n});","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/react-mesto-auth/src/utils/Auth.js"],"names":["Auth","constructor","baseUrl","register","email","password","fetch","_baseUrl","method","headers","body","JSON","stringify","then","_checkResponse","res","catch","err","console","log","authorize","checkToken","localToken","_","ok","json","Promise","reject","status","auth"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,OAAc;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;;AAAA,SAQzBC,QARyB,GAQd,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9B,aAAOC,KAAK,CAAE,GAAE,KAAKC,QAAS,SAAlB,EAA4B;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,QAAF;AAAYD,UAAAA;AAAZ,SAAf;AALgC,OAA5B,CAAL,CAONS,IAPM,CAOD,KAAKC,cAPJ,EAQND,IARM,CAQAE,GAAD,IAAS;AACb,eAAOA,GAAP;AACD,OAVM,EAWNC,KAXM,CAWCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,KArBwB;;AAAA,SAuBzBG,SAvByB,GAuBb,CAAChB,KAAD,EAAQC,QAAR,KAAqB;AAC/B,aAAOC,KAAK,CAAE,GAAE,KAAKC,QAAS,SAAlB,EAA4B;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,QAAF;AAAYD,UAAAA;AAAZ,SAAf;AALgC,OAA5B,CAAL,CAONS,IAPM,CAOD,KAAKC,cAPJ,EAQND,IARM,CAQAE,GAAD,IAAS;AACb,eAAOA,GAAP;AACD,OAVM,EAWNC,KAXM,CAWCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,KApCwB;;AAAA,SAsCzBI,UAtCyB,GAsCZC,UAAU,IAAI;AACzB,aAAOhB,KAAK,CAAE,GAAE,KAAKC,QAAS,UAAlB,EAA6B;AACvCC,QAAAA,MAAM,EAAE,KAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAmB,UAASa,UAAW;AAFhC;AAF8B,OAA7B,CAAL,CAONT,IAPM,CAOD,KAAKU,CAPJ,CAAP;AAQD,KA/CwB;;AACvB,SAAKhB,QAAL,GAAgBL,OAAhB;AACD;;AAEDY,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,WAAOA,GAAG,CAACS,EAAJ,GAAST,GAAG,CAACU,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUZ,GAAG,CAACa,MAAO,EAArC,CAA7B;AACD;;AAPQ;;AAqDX,OAAO,MAAMC,IAAI,GAAG,IAAI7B,IAAJ,CAAS;AAC3BE,EAAAA,OAAO,EAAE;AADkB,CAAT,CAAb","sourcesContent":["class Auth {\n  constructor({ baseUrl }) {\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  register = (email, password) => {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ password, email })\n    })\n    .then(this._checkResponse)\n    .then((res) => {\n      return res\n    })\n    .catch((err) => console.log(err))\n  }\n\n  authorize = (email, password) => {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ password, email })\n    })\n    .then(this._checkResponse)\n    .then((res) => {\n      return res\n    })\n    .catch((err) => console.log(err))\n  }\n\n  checkToken = localToken => {\n    return fetch(`${this._baseUrl}/user/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization' : `Bearer ${localToken}`\n      }\n    })\n    .then(this._)\n  }\n}\n\n\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n})"]},"metadata":{},"sourceType":"module"}