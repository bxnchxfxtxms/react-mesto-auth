{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const inputRef = useRef();\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  });\n  const handleChange = useCallback(() => {\n    setFormValues({\n      avatar: inputRef.current.value\n    });\n  }, [setForm]);\n  const {\n    avatar\n  } = formValues;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(inputRef.current.value);\n    props.onUpdateAvatar({\n      avatar: inputRef.current.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field popup__form-field_place_change-avatar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // value={avatar}\n        onChange: handleChange,\n        ref: inputRef,\n        id: \"avatar-link-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"url\",\n        name: \"avatarLink\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error avatar-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"KPoD8LAv7EGmAChPb2nAAUiXem4=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useState","useCallback","useRef","PopupWithForm","EditAvatarPopup","props","inputRef","formValues","setFormValues","avatar","handleChange","current","value","setForm","handleSubmit","event","preventDefault","console","log","onUpdateAvatar","name","title","buttonText","onClose","isOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE9B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,MAAM,EAAE;AADmC,GAAD,CAA5C;AAIA,QAAMC,YAAY,GAAGT,WAAW,CAAC,MAAM;AACrCO,IAAAA,aAAa,CAAC;AACZC,MAAAA,MAAM,EAAEH,QAAQ,CAACK,OAAT,CAAiBC;AADb,KAAD,CAAb;AAGD,GAJ+B,EAI7B,CAACC,OAAD,CAJ6B,CAAhC;AAMA,QAAM;AAAEJ,IAAAA;AAAF,MAAaF,UAAnB;;AAEA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACK,OAAT,CAAiBC,KAA7B;AAEAP,IAAAA,KAAK,CAACc,cAAN,CAAqB;AACnBV,MAAAA,MAAM,EAAEH,QAAQ,CAACK,OAAT,CAAiBC;AADN,KAArB;AAGD;;AAED,sBACE,QAAC,aAAD;AACA,IAAA,IAAI,EAAEP,KAAK,CAACe,IADZ;AAEA,IAAA,KAAK,EAAEf,KAAK,CAACgB,KAFb;AAGA,IAAA,UAAU,EAAEhB,KAAK,CAACiB,UAHlB;AAIA,IAAA,OAAO,EAAEjB,KAAK,CAACkB,OAJf;AAKA,IAAA,MAAM,EAAElB,KAAK,CAACmB,MALd;AAMA,IAAA,QAAQ,EAAEV,YANV;AAAA,2BAOE;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA,8BACA;AACE;AACA,QAAA,QAAQ,EAAEJ,YAFZ;AAGE,QAAA,GAAG,EAAEJ,QAHP;AAIE,QAAA,EAAE,EAAC,mBAJL;AAKE,QAAA,SAAS,EAAC,oBALZ;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,KAPP;AAQE,QAAA,IAAI,EAAC,YARP;AASE,QAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,cADA,eAWA;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjDQF,e;;KAAAA,e;AAmDT,eAAeA,eAAf","sourcesContent":["import React, { useState, useCallback, useRef } from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef()\n\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  })\n\n  const handleChange = useCallback(() => {\n    setFormValues({\n      avatar: inputRef.current.value\n    })\n  }, [setForm])\n\n  const { avatar } = formValues;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    console.log(inputRef.current.value)\n  \n    props.onUpdateAvatar({\n      avatar: inputRef.current.value\n    });\n  }\n\n  return (\n    <PopupWithForm\n    name={props.name}\n    title={props.title}\n    buttonText={props.buttonText}\n    onClose={props.onClose}\n    isOpen={props.isOpen}\n    onSubmit={handleSubmit}>\n      <label className=\"popup__form-field popup__form-field_place_change-avatar\">\n      <input\n        // value={avatar}\n        onChange={handleChange}\n        ref={inputRef}\n        id=\"avatar-link-input\"\n        className=\"popup__input-field\"\n        required\n        type=\"url\"\n        name=\"avatarLink\"\n        placeholder=\"Ссылка на аватар\" />\n      <span className=\"popup__input-error avatar-link-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}