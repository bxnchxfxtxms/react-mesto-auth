{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopupFunction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = useState();\n  const [description, setDescription] = useState('Lupa');\n  console.log(currentUser); // constructor(props) {\n  //   super(props)\n  //   this.state = {\n  //     name: '',\n  //     description: ''\n  //     // name: this.context.name,\n  //     // description: this.context.about\n  //   }\n  // }\n  // componentDidMount() {\n  //   this.setName(this.context.name)\n  // }\n  // setUserInfo = () => {\n  //   this.setState({\n  //     name: this.context.name,\n  //     description: this.context.about\n  //   })\n  // }\n\n  function handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name; // setState({\n    //   [name]: value\n    // })\n    // console.log(\n    //   context\n    //   )\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: handleChange,\n        name: \"name\",\n        id: \"username-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        minLength: \"2\",\n        maxLength: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error username-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        onChange: handleChange,\n        name: \"description\",\n        id: \"job-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"text\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        minLength: \"2\",\n        maxLength: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error job-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProfilePopup, \"Xc7UrQDN0MWby0Wfdk+RbJlL8aQ=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditProfilePopupFunction.js"],"names":["React","useState","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","description","setDescription","console","log","handleChange","event","target","value","title","buttonText","onClose","isOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE/B,QAAMC,WAAW,GAAGP,KAAK,CAACQ,UAAN,CAAiBJ,kBAAjB,CAApB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,MAAD,CAA9C;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAN+B,CAQ/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAE3B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMT,IAAI,GAAGQ,MAAM,CAACR,IAApB,CAJ2B,CAM3B;AACA;AACA;AAEA;AACA;AACA;AACC;;AAED,sBACE,QAAC,aAAD;AACA,IAAA,IAAI,EAAEH,KAAK,CAACG,IADZ;AAEA,IAAA,KAAK,EAAEH,KAAK,CAACa,KAFb;AAGA,IAAA,UAAU,EAAEb,KAAK,CAACc,UAHlB;AAIA,IAAA,OAAO,EAAEd,KAAK,CAACe,OAJf;AAKA,IAAA,MAAM,EAAEf,KAAK,CAACgB,MALd;AAAA,4BAMA;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEb,IADT;AAEE,QAAA,QAAQ,EAAEM,YAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,EAAE,EAAC,gBAJL;AAKE,QAAA,SAAS,EAAC,oBALZ;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,6FARd;AASE,QAAA,SAAS,EAAC,GATZ;AAUE,QAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAoBA;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEJ,WADT;AAEE,QAAA,QAAQ,EAAEI,YAFZ;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,EAAE,EAAC,WAJL;AAKE,QAAA,SAAS,EAAC,oBALZ;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,iCARd;AASE,QAAA,SAAS,EAAC,GATZ;AAUE,QAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCH;;GAnFQV,gB;;KAAAA,gB;AAqFT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext)\n  const [name, setName] = useState()\n  const [description, setDescription] = useState('Lupa')\n\n  console.log(currentUser)\n\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {\n  //     name: '',\n  //     description: ''\n  //     // name: this.context.name,\n  //     // description: this.context.about\n  //   }\n  // }\n\n  // componentDidMount() {\n\n  //   this.setName(this.context.name)\n  // }\n\n  \n  // setUserInfo = () => {\n  //   this.setState({\n  //     name: this.context.name,\n  //     description: this.context.about\n  //   })\n  // }\n  \n  function handleChange(event) {\n\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    \n    // setState({\n    //   [name]: value\n    // })\n    \n    // console.log(\n    //   context\n    //   )\n    }\n    \n    return (\n      <PopupWithForm\n      name={props.name}\n      title={props.title}\n      buttonText={props.buttonText}\n      onClose={props.onClose}\n      isOpen={props.isOpen}>\n      <label className=\"popup__form-field\">\n        <input\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          id=\"username-input\"\n          className=\"popup__input-field\"\n          required\n          type=\"text\"\n          placeholder=\"Имя пользователя\"\n          minLength=\"2\"\n          maxLength=\"40\" />\n        <span className=\"popup__input-error username-input-error\"></span>\n      </label>\n      <label className=\"popup__form-field\">\n        <input\n          value={description}\n          onChange={handleChange}\n          name=\"description\"\n          id=\"job-input\"\n          className=\"popup__input-field\"\n          required\n          type=\"text\"\n          placeholder=\"О себе\"\n          minLength=\"2\"\n          maxLength=\"200\" />\n        <span className=\"popup__input-error job-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}