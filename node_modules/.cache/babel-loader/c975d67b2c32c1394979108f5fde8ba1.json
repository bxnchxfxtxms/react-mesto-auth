{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarLink\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '3ab20797-6d1f-45f8-973c-0229900ec517',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","getCards","fetch","then","deleteCard","cardId","method","getUserInfo","postNewCard","data","body","JSON","stringify","name","link","setLike","removeLike","editUserInfo","about","changeAvatar","avatar","avatarLink","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  postNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n  \n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarLink\n      })\n    })\n    .then(this._checkResponse)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '3ab20797-6d1f-45f8-973c-0229900ec517',\n    'Content-Type': 'application/json'\n  }\n});"]},"metadata":{},"sourceType":"module"}