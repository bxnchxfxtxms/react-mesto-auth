{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/Main.js\";\nimport React from 'react';\nimport Card from './Card';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.insertNewCard = (newCard, card) => {\n      this.componentDidMount(state => state.map(c => c._id === card._id ? newCard : c));\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(i => i._id === this.context._id);\n      isLiked ? api.removeLike(card._id).then(newCard => {\n        this.insertNewCard(newCard);\n      }) : api.setLike(card._id).then(_ => {\n        console.log(_); // this.setState({\n        //   cards: _\n        // })\n      });\n    };\n\n    this.state = {\n      cards: []\n    };\n  } //   handleCardLike = (card) => {\n  //     const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //     // Отправляем запрос в API и получаем обновлённые данные карточки\n  //     api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //     });\n  // }\n\n\n  componentDidMount() {\n    api.getCards().then(_ => {\n      this.setState({\n        cards: _\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__avatar-overlay\",\n            onClick: this.props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__avatar\",\n            src: this.context.avatar,\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__info-line\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__username\",\n              children: this.context.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-button\",\n              type: \"button\",\n              onClick: this.props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__info-line\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__user-bio\",\n              children: this.context.about\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__add-button\",\n          type: \"button\",\n          onClick: this.props.onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"elements__grid\",\n          children: this.state.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            onCardClick: this.props.onCardClick,\n            onCardLike: this.handleCardLike\n          }, card._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMain.contextType = CurrentUserContext;\nexport default Main;","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/Main.js"],"names":["React","Card","api","CurrentUserContext","Main","Component","constructor","props","insertNewCard","newCard","card","componentDidMount","state","map","c","_id","handleCardLike","isLiked","likes","some","i","context","removeLike","then","setLike","_","console","log","cards","getCards","setState","catch","err","componentDidUpdate","render","onEditAvatar","avatar","name","onEditProfile","about","onAddPlace","onCardClick","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Card from './Card'\nimport { api } from '../utils/Api.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nclass Main extends React.Component {\n\n  static contextType = CurrentUserContext;\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: []\n    }\n  }\n\n//   handleCardLike = (card) => {\n//     const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n//     // Отправляем запрос в API и получаем обновлённые данные карточки\n//     api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n//         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n//     });\n// }\n\n  insertNewCard = (newCard, card) => {\n    this.componentDidMount((state) => state.map((c) => c._id === card._id ? newCard : c))\n  }\n\n  handleCardLike = card => {\n\n    const isLiked = card.likes.some(i => i._id === this.context._id);\n\n    isLiked ?\n    api.removeLike(card._id)\n      .then((newCard) => {\n        this.insertNewCard(newCard)\n      }) :\n      api.setLike(card._id)\n      .then(_ => {\n      console.log(_)\n      // this.setState({\n      //   cards: _\n      // })\n    })\n  }\n\n  componentDidMount() {\n    api.getCards()\n    .then(_ => {\n      this.setState({\n        cards: _\n      })\n    })\n    .catch(err => { \n      console.log(err)\n    })\n  }\n\n  componentDidUpdate() {\n    \n  }\n\n\n  render() {\n    return (\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__avatar-container\">\n            <div className=\"profile__avatar-overlay\" onClick={this.props.onEditAvatar}></div>\n            <img className=\"profile__avatar\" src={this.context.avatar} alt=\"Аватар пользователя\" />\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__info-line\">\n              <h1 className=\"profile__username\">\n                {this.context.name}\n              </h1>\n              <button className=\"profile__edit-button\" type=\"button\" onClick={this.props.onEditProfile}></button>\n            </div>\n            <div className=\"profile__info-line\">\n              <p className=\"profile__user-bio\">\n                {this.context.about}\n              </p>\n            </div>\n          </div>\n          <button className=\"profile__add-button\" type=\"button\" onClick={this.props.onAddPlace}></button>\n        </section>\n\n        <section className=\"elements\">\n          <ul className=\"elements__grid\">\n            {this.state.cards.map(card => (\n              <Card\n                card={card}\n                key={card._id}\n                onCardClick={this.props.onCardClick}\n                onCardLike={this.handleCardLike}\n              />\n            ))}\n          </ul>\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}