{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const inputRef = useRef();\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  });\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n\n  function handleSubmit(event) {\n    event.preventDefault(); // onUpdateAvatar({\n    //   avatar: inputRef\n    // });\n  }\n\n  const {\n    avatar\n  } = formValues;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field popup__form-field_place_change-avatar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: avatar,\n        onChange: handleChange,\n        ref: inputRef,\n        id: \"avatar-link-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"url\",\n        name: \"avatarLink\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error avatar-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"KPoD8LAv7EGmAChPb2nAAUiXem4=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useState","useCallback","useRef","PopupWithForm","CurrentUserContext","EditAvatarPopup","props","inputRef","formValues","setFormValues","avatar","handleChange","event","name","value","target","prevState","handleSubmit","preventDefault","title","buttonText","onClose","isOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE9B,QAAMC,QAAQ,GAAGL,MAAM,EAAvB;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAC3CU,IAAAA,MAAM,EAAE;AADmC,GAAD,CAA5C;AAIA,QAAMC,YAAY,GAAGV,WAAW,CAAEW,KAAD,IAAW;AAC1C,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAN,IAAAA,aAAa,CAACO,SAAS,KAAK,EAAE,GAAGA,SAAL;AAAgB,OAACH,IAAD,GAAQC;AAAxB,KAAL,CAAV,CAAb;AACD,GAH+B,EAG7B,CAACL,aAAD,CAH6B,CAAhC;;AAKA,WAASQ,YAAT,CAAsBL,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACM,cAAN,GAD2B,CAG3B;AACA;AACA;AACD;;AAED,QAAM;AAAER,IAAAA;AAAF,MAAaF,UAAnB;AAEA,sBACE,QAAC,aAAD;AACA,IAAA,IAAI,EAAEF,KAAK,CAACO,IADZ;AAEA,IAAA,KAAK,EAAEP,KAAK,CAACa,KAFb;AAGA,IAAA,UAAU,EAAEb,KAAK,CAACc,UAHlB;AAIA,IAAA,OAAO,EAAEd,KAAK,CAACe,OAJf;AAKA,IAAA,MAAM,EAAEf,KAAK,CAACgB,MALd;AAMA,IAAA,QAAQ,EAAEL,YANV;AAAA,2BAOE;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA,8BACA;AACE,QAAA,KAAK,EAAEP,MADT;AAEE,QAAA,QAAQ,EAAEC,YAFZ;AAGE,QAAA,GAAG,EAAEJ,QAHP;AAIE,QAAA,EAAE,EAAC,mBAJL;AAKE,QAAA,SAAS,EAAC,oBALZ;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,KAPP;AAQE,QAAA,IAAI,EAAC,YARP;AASE,QAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,cADA,eAWA;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA9CQF,e;;KAAAA,e;AAgDT,eAAeA,eAAf","sourcesContent":["import React, { useState, useCallback, useRef } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef()\n\n  const [formValues, setFormValues] = useState({\n    avatar: ''\n  })\n  \n  const handleChange = useCallback((event) => {\n    const { name, value } = event.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }))\n  }, [setFormValues])\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  \n    // onUpdateAvatar({\n    //   avatar: inputRef\n    // });\n  }\n\n  const { avatar } = formValues;\n\n  return (\n    <PopupWithForm\n    name={props.name}\n    title={props.title}\n    buttonText={props.buttonText}\n    onClose={props.onClose}\n    isOpen={props.isOpen}\n    onSubmit={handleSubmit}>\n      <label className=\"popup__form-field popup__form-field_place_change-avatar\">\n      <input\n        value={avatar}\n        onChange={handleChange}\n        ref={inputRef}\n        id=\"avatar-link-input\"\n        className=\"popup__input-field\"\n        required\n        type=\"url\"\n        name=\"avatarLink\"\n        placeholder=\"Ссылка на аватар\" />\n      <span className=\"popup__input-error avatar-link-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}