{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const inputRef = useRef(''); // let avatar = inputRef.current.value\n  // const { avatar } = inputRef.current.value\n  // const [formValues, setFormValues] = useState({\n  //   avatar: ''\n  // })\n  // useEffect(() => {\n  //   if (props.isOpen) {\n  //     setFormValues({\n  //       avatar: ''\n  //     })\n  //   }\n  // }, [props.isOpen])\n  // useEffect(() => {\n  //   if (props.isOpen) {\n  //     inputRef.current.value = ''\n  // avatar = 'Pupa'\n  //   }\n  // })\n  // const handleChange = useCallback(() => {\n  //   setFormValues({\n  //     avatar: inputRef.current.value\n  //   })\n  // }, [setFormValues])\n\n  const handleChange = useCallback(() => {//   avatar = inputRef.current.value\n    //   console.log(avatar)\n    //   console.log(inputRef.current.value)\n    //   inputRef.current.value\n  }); // const { avatar } = formValues;\n  // const { avatar } = inputRef.current.value\n\n  function handleSubmit(event) {\n    event.preventDefault(); // props.onUpdateAvatar({\n    //   avatar: inputRef.current.value\n    // });\n    // props.onUpdateAvatar(avatar)\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: props.name,\n    title: props.title,\n    buttonText: props.buttonText,\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field popup__form-field_place_change-avatar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // value={avatar || ''}\n        // value={inputRef.current.value || 'undefined' || ''}\n        // value={inputRef.current.value || ''}\n        // value={'Pupa'}\n        onChange: handleChange,\n        ref: inputRef,\n        id: \"avatar-link-input\",\n        className: \"popup__input-field\",\n        required: true,\n        type: \"url\",\n        name: \"avatarLink\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error avatar-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"4GyOfkaWjrjXIDduVMBrTlPKFgw=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dmitriyshumeykin/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useState","useCallback","useRef","useEffect","PopupWithForm","EditAvatarPopup","props","inputRef","handleChange","handleSubmit","event","preventDefault","name","title","buttonText","onClose","isOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE9B,QAAMC,QAAQ,GAAGL,MAAM,CAAC,EAAD,CAAvB,CAF8B,CAI9B;AACA;AAEA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACI;AACJ;AACA;AAEE;AACA;AACA;AACA;AACA;;AAEA,QAAMM,YAAY,GAAGP,WAAW,CAAC,MAAM,CACvC;AACA;AACA;AACA;AACC,GAL+B,CAAhC,CAhC8B,CAuC9B;AAEA;;AAEA,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAG3B;AACA;AACA;AAEA;AACD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAEL,KAAK,CAACM,IADd;AAEE,IAAA,KAAK,EAAEN,KAAK,CAACO,KAFf;AAGE,IAAA,UAAU,EAAEP,KAAK,CAACQ,UAHpB;AAIE,IAAA,OAAO,EAAER,KAAK,CAACS,OAJjB;AAKE,IAAA,MAAM,EAAET,KAAK,CAACU,MALhB;AAME,IAAA,QAAQ,EAAEP,YANZ;AAAA,2BAOI;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA,8BACA;AACE;AACA;AACA;AACA;AACA,QAAA,QAAQ,EAAED,YALZ;AAME,QAAA,GAAG,EAAED,QANP;AAOE,QAAA,EAAE,EAAC,mBAPL;AAQE,QAAA,SAAS,EAAC,oBARZ;AASE,QAAA,QAAQ,MATV;AAUE,QAAA,IAAI,EAAC,KAVP;AAWE,QAAA,IAAI,EAAC,YAXP;AAYE,QAAA,WAAW,EAAC;AAZd;AAAA;AAAA;AAAA;AAAA,cADA,eAcA;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/EQF,e;;KAAAA,e;AAiFT,eAAeA,eAAf","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef('')\n\n  // let avatar = inputRef.current.value\n  // const { avatar } = inputRef.current.value\n\n  // const [formValues, setFormValues] = useState({\n  //   avatar: ''\n  // })\n\n// useEffect(() => {\n//   if (props.isOpen) {\n//     setFormValues({\n//       avatar: ''\n//     })\n//   }\n// }, [props.isOpen])\n\n// useEffect(() => {\n//   if (props.isOpen) {\n//     inputRef.current.value = ''\n    // avatar = 'Pupa'\n//   }\n// })\n\n  // const handleChange = useCallback(() => {\n  //   setFormValues({\n  //     avatar: inputRef.current.value\n  //   })\n  // }, [setFormValues])\n\n  const handleChange = useCallback(() => {\n  //   avatar = inputRef.current.value\n  //   console.log(avatar)\n  //   console.log(inputRef.current.value)\n  //   inputRef.current.value\n  })\n\n  // const { avatar } = formValues;\n\n  // const { avatar } = inputRef.current.value\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  \n    // props.onUpdateAvatar({\n    //   avatar: inputRef.current.value\n    // });\n\n    // props.onUpdateAvatar(avatar)\n  }\n\n  return (\n    <PopupWithForm\n      name={props.name}\n      title={props.title}\n      buttonText={props.buttonText}\n      onClose={props.onClose}\n      isOpen={props.isOpen}\n      onSubmit={handleSubmit}>\n        <label className=\"popup__form-field popup__form-field_place_change-avatar\">\n        <input\n          // value={avatar || ''}\n          // value={inputRef.current.value || 'undefined' || ''}\n          // value={inputRef.current.value || ''}\n          // value={'Pupa'}\n          onChange={handleChange}\n          ref={inputRef}\n          id=\"avatar-link-input\"\n          className=\"popup__input-field\"\n          required\n          type=\"url\"\n          name=\"avatarLink\"\n          placeholder=\"Ссылка на аватар\" />\n        <span className=\"popup__input-error avatar-link-input-error\"></span>\n        </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}